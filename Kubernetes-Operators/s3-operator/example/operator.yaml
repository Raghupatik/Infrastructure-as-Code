apiVersion: v1
kind: Namespace
metadata:
  name: s3-operator
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: s3s.amritgill.alpha.coveros.com
  namespace: s3-operator
spec:
  group: amritgill.alpha.coveros.com
  names:
    kind: S3
    listKind: S3List
    plural: s3s
    singular: s3
  scope: Namespaced
  version: v1alpha1
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: s3-operator
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - pods
  - services
  verbs:
  - get
  - watch
  - create
  - delete
  - update
- apiGroups:
  - apps
  resources:
  - statefulsets
  - secrets
  verbs:
  - get
  - create
  - delete
  - update
- apiGroups:
  - amritgill.alpha.coveros.com
  resources:
  - "*"
  verbs:
  - "*"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: s3-operator
  namespace: s3-operator
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: s3-operator
  namespace: s3-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: s3-operator
subjects:
- kind: ServiceAccount
  name: s3-operator
  namespace: s3-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3-operator
  namespace: s3-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: s3-operator
  template:
    metadata:
      labels:
        name: s3-operator
    spec:
      serviceAccountName: s3-operator
      containers:
        - name: s3-operator
          image: agill17/s3-operator
          ports:
          - containerPort: 60000
            name: metrics
          command:
          - s3-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: "s3-operator"
            - name: RESYNC_PERIOD
              value: "12"
            - name: AWS_ACCESS
              valueFrom:
                secretKeyRef:
                  name: aws-creds
                  key: AWS_ACCESS
            - name: AWS_SECRET
              valueFrom:
                secretKeyRef:
                  name: aws-creds
                  key: AWS_SECRET